{"version":3,"sources":["actions/actionType.js","helpers/url.js","helpers/utils.js","actions/posts.js","components/CreatePost.js","components/PostsList.js","actions/auth.js","components/Navbar.js","components/FriendsListItem.js","components/FriendsList.js","components/Home.js","components/Login.js","components/SignUp.js","actions/profile.js","actions/friends.js","components/UserProfile.js","components/Settings.js","components/Page404.js","components/App.js","reducer/auth.js","reducer/profile.js","reducer/friends.js","reducer/index.js","reducer/posts.js","index.js","store/index.js"],"names":["UPDATE_POSTS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAILED","CLEAR_AUTH_STATE","AUTHENTICATE_USER","LOG_OUT","EDIT_USER_SUCCESSFUL","EDIT_USER_FAIL","USER_PROFILE_SUCCESS","USER_PROFILE_FAILURE","FETCH_USER_PROFILE","FETCH_FRIENDS_SUCCESS","ADD_FRIEND","ADD_POST","API_ROOT","APIUrls","page","limit","userId","getFormBody","params","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","getAuthToken","localStorage","getItem","fetchPosts","dispatch","url","fetch","then","response","json","data","posts","console","log","type","createPost","content","method","headers","Authorization","body","post","success","CreatePost","props","handleOnClick","state","handleChange","e","setState","target","value","className","this","onChange","id","onClick","Component","connect","auth","PostsList","map","to","user","_id","src","alt","name","likes","length","comments","placeholder","react","propTypes","PropTypes","array","isRequired","login","email","password","setItem","token","errorMessage","message","error","logoutUser","signup","confirmPassword","confirm_password","clearAuthState","editUser","Navbar","logOut","removeItem","isLoggedin","FriendsListItem","friend","FriendsList","friends","to_user","Home","Login","handleEmailChange","handlePasswordChange","handleSubmit","preventDefault","inProgress","from","location","pathname","required","disabled","React","Signup","handleInputChange","field","onFormSubmit","fetchUserProfile","fetchUserFriends","UserProfile","checkIfUserIsAFriend","match","indexOf","handleAddFriendClick","a","options","friendship","profile","isUserAFriend","Settings","fieldName","Val","handleSave","editMode","Page404","PrivateRoute","privateRouteProps","path","component","render","App","jwtDecode","authenticateUser","exact","SignUp","initialiseState","initalProfileState","defaultProfileState","combineReducers","action","concat","store","createStore","reducer","applyMiddleware","thunk","logger","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d78c143.chunk.js","sourcesContent":["export const UPDATE_POSTS = \"UPDATE_POSTS\";\r\nexport const LOGIN_START = \"LOGIN_START\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const SIGNUP_START = \"SIGNUP_START\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAILED = \"SIGNUP_FAILED\";\r\nexport const CLEAR_AUTH_STATE = \"CLEAR_AUTH_STATE\";\r\n\r\nexport const AUTHENTICATE_USER = \" AUTHENTICATE_USER\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const EDIT_USER_SUCCESSFUL = \"EDIT_USER_SUCCESSFU\";\r\nexport const EDIT_USER_FAIL = \"EDIT_USER_FAIL\";\r\n\r\nexport const USER_PROFILE_SUCCESS = \"USER_PROFILE_SUCCESS\";\r\nexport const USER_PROFILE_FAILURE = \"USER_PROFILE_FAILURE\";\r\nexport const FETCH_USER_PROFILE = \"FETCH_USER_PROFILE\";\r\n\r\nexport const FETCH_FRIENDS_SUCCESS = \"FETCH_FRIENDS_SUCCESS\";\r\nexport const ADD_FRIEND = \"ADD_FRIEND\";\r\n\r\nexport const ADD_POST = \"ADD_POST\";\r\n","const API_ROOT = \"http://codeial.codingninjas.com:8000/api/v2\";\r\n\r\nexport const APIUrls = {\r\n  login: () => `${API_ROOT}/users/login`,\r\n  signup: () => `${API_ROOT}/users/signup`,\r\n\r\n  editProfile: () => `${API_ROOT}/users/edit`,\r\n  fetchPosts: (page = 1, limit = 5) =>\r\n    `${API_ROOT}/posts?page=${page}&limit=${limit}`,\r\n  userProfile: (userId) => `${API_ROOT}/users/${userId}`,\r\n\r\n  userFriends: () => `${API_ROOT}/friendship/fetch_user_friends`,\r\n  addFriend: (userId) =>\r\n    `${API_ROOT}/friendship/create_friendship?user_id=${userId}`,\r\n  removeFriend: (userId) =>\r\n    `${API_ROOT}/friendship/remove_friendship?user_id=${userId}`,\r\n  createPost: () => `${API_ROOT}/posts/create`,\r\n};\r\n","export function getFormBody(params) {\r\n  let formBody = [];\r\n  for (let property in params) {\r\n    let encodedKey = encodeURIComponent(property);\r\n    let encodedValue = encodeURIComponent(params[property]);\r\n    formBody.push(encodedKey + \"=\" + encodedValue);\r\n  }\r\n  return formBody.join(\"&\");\r\n}\r\nexport function getAuthToken() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n","import posts from \"../reducer/posts\";\r\nimport { UPDATE_POSTS, ADD_POST } from \"./actionType\";\r\nimport { APIUrls } from \"../helpers/url\";\r\nimport { getAuthToken, getFormBody } from \"../helpers/utils\";\r\nexport function fetchPosts() {\r\n  return (dispatch) => {\r\n    //   const url = \"http//codeial.com:8000/api/v2/posts?page=1&limit=5\";\r\n    const url = APIUrls.fetchPosts();\r\n    // \"http://codeial.codingninjas.com:8000/api/v2/posts?page=1&limit=5\";\r\n    fetch(url)\r\n      .then((response) => {\r\n        //   console.log(\"response\", response);\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"dataaaaaaa\", data);\r\n        dispatch(updatePosts(data.data.posts));\r\n      });\r\n  };\r\n}\r\nexport function updatePosts(posts) {\r\n  return {\r\n    type: UPDATE_POSTS,\r\n    posts,\r\n  };\r\n}\r\nexport function addPost(post) {\r\n  return {\r\n    type: ADD_POST,\r\n    post,\r\n  };\r\n}\r\n\r\nexport function createPost(content) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.createPost();\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthToken()}`,\r\n      },\r\n      body: getFormBody({ content }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"dATA\", data);\r\n\r\n        if (data.success) {\r\n          dispatch(addPost(data.data.post));\r\n        }\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createPost } from \"../actions/posts\";\r\n\r\nclass CreatePost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n  }\r\n\r\n  handleOnClick = () => {\r\n    // dispatch action\r\n    console.log(\"aa\");\r\n    this.props.dispatch(createPost(this.state.content));\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"create-post\">\r\n        <textarea\r\n          className=\"add-post\"\r\n          value={this.state.content}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <div>\r\n          <button id=\"add-post-btn\" onClick={this.handleOnClick}>\r\n            Add Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreatePost);\r\n","import react, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreatePost from \"./CreatePost.js\";\r\nclass PostsList extends react.Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n    return (\r\n      <div className=\"posts-list\">\r\n        <CreatePost />\r\n        {posts.map((post) => (\r\n          <div className=\"post-wrapper\" key={post._id}>\r\n            <div className=\"post-header\">\r\n              <div className=\"post-avatar\">\r\n                <Link to={`/user/${post.user._id}`}>\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                    alt=\"user-pic\"\r\n                  />\r\n                </Link>\r\n                <div>\r\n                  <span className=\"post-author\">{post.user.name}</span>\r\n                  <span className=\"post-time\">a minute ago</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"post-content\">{post.content}</div>\r\n\r\n              <div className=\"post-actions\">\r\n                <div className=\"post-like\">\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/1077/1077035.svg\"\r\n                    alt=\"likes-icon\"\r\n                  />\r\n                  <span>{post.likes.length}</span>\r\n                </div>\r\n\r\n                <div className=\"post-comments-icon\">\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/1380/1380338.svg\"\r\n                    alt=\"comments-icon\"\r\n                  />\r\n                  <span>{post.comments.length}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"post-comment-box\">\r\n                <input placeholder=\"Start typing a comment\" />\r\n              </div>\r\n\r\n              <div className=\"post-comments-list\">\r\n                <div className=\"post-comments-item\">\r\n                  <div className=\"post-comment-header\">\r\n                    <span className=\"post-comment-author\">Bill</span>\r\n                    <span className=\"post-comment-time\">a minute ago</span>\r\n                    <span className=\"post-comment-likes\">22</span>\r\n                  </div>\r\n\r\n                  <div className=\"post-comment-content\">Random comment</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nPostsList.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default PostsList;\r\n","import {\r\n  LOGIN_START,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  SIGNUP_START,\r\n  SIGNUP_FAILED,\r\n  SIGNUP_SUCCESS,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_USER_SUCCESSFUL,\r\n  EDIT_USER_FAIL,\r\n} from \"./actionType\";\r\nimport { APIUrls } from \"../helpers/url\";\r\nimport { getFormBody, getAuthToken } from \"../helpers/utils\";\r\n\r\nimport { bindActionCreators } from \"redux\";\r\nexport function startLogin() {\r\n  return {\r\n    type: LOGIN_START,\r\n  };\r\n}\r\nexport function LoginSuccess(user) {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user,\r\n  };\r\n}\r\nexport function LoginFail(errorMessage) {\r\n  return {\r\n    type: LOGIN_FAIL,\r\n    error: errorMessage,\r\n  };\r\n}\r\nexport function login(email, password) {\r\n  return (dispatch) => {\r\n    dispatch(startLogin());\r\n    const url = APIUrls.login();\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: getFormBody({ email, password }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"data\", data);\r\n        if (data.success) {\r\n          localStorage.setItem(\"token\", data.data.token);\r\n          dispatch(LoginSuccess(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(LoginFail(data.message));\r\n      });\r\n  };\r\n}\r\nexport function authenticateUser(user) {\r\n  return {\r\n    type: AUTHENTICATE_USER,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function logoutUser() {\r\n  return {\r\n    type: LOG_OUT,\r\n  };\r\n}\r\n\r\nexport function signup(email, password, confirmPassword, name) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.signup();\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n      body: getFormBody({\r\n        email,\r\n        password,\r\n        confirm_password: confirmPassword,\r\n        name,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log('data', data);\r\n        if (data.success) {\r\n          // do something\r\n          localStorage.setItem(\"token\", data.data.token);\r\n          dispatch(signupSuccessful(data.data.user));\r\n          return;\r\n        }\r\n        dispatch(signupFailed(data.message));\r\n      });\r\n  };\r\n}\r\n\r\nexport function startSingup() {\r\n  return {\r\n    type: SIGNUP_START,\r\n  };\r\n}\r\n\r\nexport function signupFailed(error) {\r\n  return {\r\n    type: SIGNUP_FAILED,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function signupSuccessful(user) {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function clearAuthState() {\r\n  return {\r\n    type: CLEAR_AUTH_STATE,\r\n  };\r\n}\r\nexport function editUserSuccessful(user) {\r\n  return {\r\n    type: EDIT_USER_SUCCESSFUL,\r\n    user,\r\n  };\r\n}\r\nexport function editUserFail(error) {\r\n  return {\r\n    type: EDIT_USER_FAIL,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function editUser(email, password, confirmPassword, userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.editProfile();\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthToken()}`,\r\n      },\r\n      body: getFormBody({\r\n        email,\r\n        password,\r\n        confirm_password: confirmPassword,\r\n        id: userId,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log('data', data);\r\n        if (data.success) {\r\n          // do something\r\n\r\n          dispatch(editUserSuccessful(data.data.user));\r\n          if (data.data.token) {\r\n            localStorage.setItem(\"token\", data.data.token);\r\n          }\r\n          return;\r\n        }\r\n        dispatch(editUserFail(data.message));\r\n      });\r\n  };\r\n}\r\n","import react, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { logoutUser } from \"../actions/auth\";\r\nclass Navbar extends react.Component {\r\n  logOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    this.props.dispatch(logoutUser());\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    console.log(\"auth\", auth);\r\n    return (\r\n      <div>\r\n        <nav className=\"nav\">\r\n          <div className=\"left-div\">\r\n            <Link to=\"./\">\r\n              <img\r\n                src=\"https://ninjasfiles.s3.amazonaws.com/0000000000003454.png\"\r\n                alt=\"logo\"\r\n              />\r\n            </Link>\r\n          </div>\r\n          <div className=\"search-container\">\r\n            <img\r\n              className=\"search-icon\"\r\n              src=\"https://image.flaticon.com/icons/svg/483/483356.svg\"\r\n              alt=\"search-icon\"\r\n            />\r\n            <input placeholder=\"Search\" />\r\n\r\n            <div className=\"search-results\">\r\n              <ul>\r\n                <li className=\"search-results-row\">\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                    alt=\"user-dp\"\r\n                  />\r\n                  <span>John Doe</span>\r\n                </li>\r\n                <li className=\"search-results-row\">\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                    alt=\"user-dp\"\r\n                  />\r\n                  <span>John Doe</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"right-nav\">\r\n            {auth.isLoggedin && (\r\n              <div className=\"user\">\r\n                <Link to=\"/settings\">\r\n                  <img\r\n                    src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n                    alt=\"user-dp\"\r\n                    id=\"user-dp\"\r\n                  />\r\n                </Link>\r\n                <span>{auth.user.name}</span>\r\n              </div>\r\n            )}\r\n            <div className=\"nav-links\">\r\n              <ul>\r\n                {!auth.isLoggedin && (\r\n                  <li>\r\n                    <Link to=\"/login\">Log in</Link>\r\n                  </li>\r\n                )}\r\n\r\n                {auth.isLoggedin && <li onClick={this.logOut}>Log out</li>}\r\n\r\n                {!auth.isLoggedin && (\r\n                  <li>\r\n                    <Link to=\"/signup\">Register</Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction FriendsListItem(props) {\r\n  return (\r\n    <div>\r\n      <Link className=\"friends-item\" to={`user/${props.friend._id}`}>\r\n        <div className=\"friends-img\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-pic\"\r\n          />\r\n        </div>\r\n        <div className=\"friends-name\">{props.friend.email}</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendsListItem;\r\n","import React from \"react\";\r\nimport FriendsListItem from \"./FriendsListItem.js\";\r\n\r\nconst FriendsList = (props) => {\r\n  return (\r\n    <div className=\"friends-list\">\r\n      <div className=\"header\">Friends</div>\r\n\r\n      {props.friends && props.friends.length === 0 && (\r\n        <div className=\"no-friends\">No friends found!</div>\r\n      )}\r\n\r\n      {props.friends &&\r\n        props.friends.map((friend) => (\r\n          <FriendsListItem friend={friend.to_user} key={friend._id} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n","import PostsList from \"./PostsList.js\";\r\nimport FriendsList from \"./FriendsList.js\";\r\n\r\nimport react from \"react\";\r\nclass Home extends react.Component {\r\n  render() {\r\n    const { posts, friends, isLoggedin } = this.props;\r\n    return (\r\n      <div className=\"home\">\r\n        <PostsList posts={posts} />;\r\n        {isLoggedin && <FriendsList friends={friends} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { login, clearAuthState } from \"../actions/auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nclass Login extends React.Component {\r\n  constructor() {\r\n    super();\r\n    // this.emailInputRef = React.createRef();\r\n    // this.PasswordInputRef = React.createRef();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n  handleEmailChange = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n  handlePasswordChange = (e) => {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    const { email, password } = this.state;\r\n    if (email && password) {\r\n      this.props.dispatch(login(email, password));\r\n    }\r\n    // console.log(this.emailInputRef);\r\n    // console.log(this.PasswordInputRef);\r\n  };\r\n\r\n  render() {\r\n    const { error, inProgress, isLoggedin } = this.props.auth;\r\n    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n    if (isLoggedin) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    return (\r\n      <div className=\"login-form\">\r\n        <span className=\"login-signup-header\">Log In</span>=\r\n        {error && <div className=\"login-signup-header2\"> ${error} </div>}\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            // ref={this.emailInputRef}\r\n            onChange={this.handleEmailChange}\r\n            value={this.state.email}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n            required\r\n            // ref={this.PasswordInputRef}\r\n            onChange={this.handlePasswordChange}\r\n            value={this.state.password}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          {inProgress ? (\r\n            <button onClick={this.handleSubmit} disabled={inProgress}>\r\n              {\" \"}\r\n              Loggin In...\r\n            </button>\r\n          ) : (\r\n            <button onClick={this.handleSubmit} disabled={inProgress}>\r\n              {\" \"}\r\n              Log In\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n\r\n// export default Login;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { startSingup, signup, clearAuthState } from \"../actions/auth\";\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n      confirmPassword: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n\r\n  handleInputChange = (field, value) => {\r\n    this.setState({\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password, confirmPassword, name } = this.state;\r\n\r\n    if (email && password && confirmPassword && name) {\r\n      this.props.dispatch(startSingup());\r\n      this.props.dispatch(signup(email, password, confirmPassword, name));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { inProgress, error, isLoggedin } = this.props.auth;\r\n\r\n    if (isLoggedin) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <form className=\"login-form\">\r\n        <span className=\"login-signup-header\"> Signup</span>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Name\"\r\n            type=\"text\"\r\n            required\r\n            onChange={(e) => this.handleInputChange(\"name\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            required\r\n            onChange={(e) => this.handleInputChange(\"email\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Confirm password\"\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) =>\r\n              this.handleInputChange(\"confirmPassword\", e.target.value)\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            required\r\n            onChange={(e) => this.handleInputChange(\"password\", e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <button onClick={this.onFormSubmit} disabled={inProgress}>\r\n            Signup\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Signup);\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from \"./actionType\";\r\nimport { APIUrls } from \"../helpers/url\";\r\nimport { getAuthToken } from \"../helpers/utils\";\r\n\r\nexport function startUserProfileFetch() {\r\n  return {\r\n    type: FETCH_USER_PROFILE,\r\n  };\r\n}\r\n\r\nexport function userProfileSuccess(user) {\r\n  return {\r\n    type: USER_PROFILE_SUCCESS,\r\n    user,\r\n  };\r\n}\r\n\r\nexport function userProfileFailed(error) {\r\n  return {\r\n    type: USER_PROFILE_FAILURE,\r\n    error,\r\n  };\r\n}\r\n\r\nexport function fetchUserProfile(userId) {\r\n  return (dispatch) => {\r\n    dispatch(startUserProfileFetch());\r\n\r\n    const url = APIUrls.userProfile(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthToken()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch(userProfileSuccess(data.data.user));\r\n      });\r\n  };\r\n}\r\n","import { APIUrls } from \"../helpers/url\";\r\nimport { getAuthToken } from \"../helpers/utils\";\r\nimport { FETCH_FRIENDS_SUCCESS, ADD_FRIEND } from \"./actionType\";\r\n\r\nexport function fetchUserFriends(userId) {\r\n  return (dispatch) => {\r\n    const url = APIUrls.userFriends(userId);\r\n    fetch(url, {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthToken()}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"data\", data);\r\n        dispatch(fetchFriendsSucces(data.data.friends));\r\n      });\r\n  };\r\n}\r\n\r\nexport function fetchFriendsSucces(friends) {\r\n  return {\r\n    type: FETCH_FRIENDS_SUCCESS,\r\n    friends,\r\n  };\r\n}\r\nexport function addFriend(friend) {\r\n  return {\r\n    type: ADD_FRIEND,\r\n    friend,\r\n  };\r\n}\r\n","// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { fetchUserProfile } from \"../actions/profile\";\r\n\r\n// class UserProfile extends Component {\r\n//   componentDidMount() {\r\n//     const { match } = this.props;\r\n\r\n//     if (match.params.userId) {\r\n//       // dispatch an action\r\n//       this.props.dispatch(fetchUserProfile(match.params.userId));\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     const {\r\n//       match: { params },\r\n//       profile,\r\n//     } = this.props;\r\n//     console.log(\"this.props\", params);\r\n//     const user = profile.user;\r\n\r\n//     // if (profile.inProgress) {\r\n//     //   return <h1>Loading!</h1>;\r\n//     // }\r\n\r\n//     return (\r\n//       <div className=\"settings\">\r\n//         <div className=\"img-container\">\r\n//           <img\r\n//             src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n//             alt=\"user-dp\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"field\">\r\n//           <div className=\"field-label\">Name</div>\r\n//           <div className=\"field-value\">{user.name}</div>\r\n//         </div>\r\n\r\n//         <div className=\"field\">\r\n//           <div className=\"field-label\">Email</div>\r\n//           <div className=\"field-value\">{user.email}</div>\r\n//         </div>\r\n\r\n//         <div className=\"btn-grp\">\r\n//           <button className=\"button save-btn\">Add Friend</button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// function mapStateToProps({ profile }) {\r\n//   return {\r\n//     profile,\r\n//   };\r\n// }\r\n// export default connect(mapStateToProps)(UserProfile);\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUserProfile } from \"../actions/profile\";\r\nimport { APIUrls } from \"../helpers/url\";\r\nimport { getAuthToken } from \"../helpers/utils\";\r\nimport { addFriend } from \"../actions/friends\";\r\nimport { checkPropTypes } from \"prop-types\";\r\n\r\nclass UserProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      success: null,\r\n      error: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n\r\n    if (match.params.userId) {\r\n      // dispatch an action\r\n      this.props.dispatch(fetchUserProfile(match.params.userId));\r\n    }\r\n  }\r\n\r\n  checkIfUserIsAFriend = () => {\r\n    console.log(\"this.props\", this.props);\r\n    const { match, friends } = this.props;\r\n    const userId = match.params.userId;\r\n\r\n    const index = friends.map((friend) => friend.to_user._id).indexOf(userId);\r\n\r\n    if (index !== -1) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  handleAddFriendClick = async () => {\r\n    const userId = this.props.match.params.userId;\r\n    const url = APIUrls.addFriend(userId);\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        Authorization: `Bearer ${getAuthToken()}`,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      this.setState({\r\n        success: true,\r\n      });\r\n\r\n      this.props.dispatch(addFriend(data.data.friendship));\r\n    } else {\r\n      this.setState({\r\n        success: null,\r\n        error: data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      match: { params },\r\n      profile,\r\n    } = this.props;\r\n    console.log(\"thisiiii.props\", profile);\r\n    const user = profile.user;\r\n    console.log(\"user\", user);\r\n    // if (profile.inProgress) {\r\n    //   return <h1>Loading!</h1>;\r\n    // }\r\n\r\n    const isUserAFriend = this.checkIfUserIsAFriend();\r\n    const { success, error } = this.state;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Name</div>\r\n          <div className=\"field-value\">{user.name}</div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n\r\n        <div className=\"btn-grp\">\r\n          {!isUserAFriend ? (\r\n            <button\r\n              className=\"button save-btn\"\r\n              onClick={this.handleAddFriendClick}\r\n            >\r\n              Add Friend\r\n            </button>\r\n          ) : (\r\n            <button className=\"button save-btn\">Remove Friend</button>\r\n          )}\r\n\r\n          {success && (\r\n            <div className=\"alert success-dailog\">\r\n              Friend added successfully\r\n            </div>\r\n          )}\r\n          {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ profile, friends }) {\r\n  return {\r\n    profile,\r\n    friends,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UserProfile);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearAuthState, editUser } from \"../actions/auth\";\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: props.auth.user.name,\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      editMode: false,\r\n    };\r\n  }\r\n  handleChange = (fieldName, Val) => {\r\n    this.setState({\r\n      [fieldName]: Val,\r\n    });\r\n  };\r\n  handleSave = () => {\r\n    const { password, confirmPassword, name } = this.state;\r\n    const { user } = this.props.auth;\r\n    this.props.dispatch(editUser(name, password, confirmPassword, user._id));\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.dispatch(clearAuthState());\r\n  }\r\n  render() {\r\n    const { user, error } = this.props.auth;\r\n    const { editMode } = this.state;\r\n    return (\r\n      <div className=\"settings\">\r\n        <div className=\"img-container\">\r\n          <img\r\n            src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n            alt=\"user-dp\"\r\n          />\r\n        </div>\r\n        {error && <div className=\"alert error-dailog\">{error}</div>}\r\n        {error === false && (\r\n          <div className=\"alert success-dailog\">\r\n            Successfully updated profile!!\r\n          </div>\r\n        )}\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Email</div>\r\n          <div className=\"field-value\">{user.email}</div>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n          <div className=\"field-label\">Name</div>\r\n          {editMode ? (\r\n            <input\r\n              type=\"text\"\r\n              onChange={(e) => this.handleChange(\"name\", e.target.value)}\r\n              value={this.state.name}\r\n            />\r\n          ) : (\r\n            <div className=\"field-value\">{user.name}</div>\r\n          )}\r\n        </div>\r\n\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">New password</div>\r\n\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) => this.handleChange(\"password\", e.target.value)}\r\n              value={this.state.password}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {editMode && (\r\n          <div className=\"field\">\r\n            <div className=\"field-label\">Confirm password</div>\r\n\r\n            <input\r\n              type=\"password\"\r\n              onChange={(e) =>\r\n                this.handleChange(\"confirmPassword\", e.target.value)\r\n              }\r\n              value={this.state.confirmPassword}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"btn-grp\">\r\n          {editMode ? (\r\n            <button className=\"button save-btn\" onClick={this.handleSave}>\r\n              Save\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"button edit-btn\"\r\n              onClick={() => this.handleChange(\"editMode\", true)}\r\n            >\r\n              Edit profile\r\n            </button>\r\n          )}\r\n\r\n          {editMode && (\r\n            <div\r\n              className=\"go-back\"\r\n              onClick={() => this.handleChange(\"editMode\", false)}\r\n            >\r\n              Go back\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    auth: state.auth,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Settings);\r\n// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { editUser, clearAuthState } from \"../actions/auth\";\r\n\r\n// class Settings extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       name: props.auth.user.name,\r\n//       password: \"\",\r\n//       confirmPassword: \"\",\r\n//       editMode: false,\r\n//     };\r\n//   }\r\n\r\n//   handleChange = (fieldName, val) => {\r\n//     this.setState({\r\n//       [fieldName]: val,\r\n//     });\r\n//   };\r\n\r\n//   handleSave = () => {\r\n//     const { password, confirmPassword, name } = this.state;\r\n//     const { user } = this.props.auth;\r\n\r\n//     this.props.dispatch(editUser(name, password, confirmPassword, user._id));\r\n//   };\r\n\r\n//   componentWillUnmount() {\r\n//     this.props.dispatch(clearAuthState());\r\n//   }\r\n//   render() {\r\n//     const { user, error } = this.props.auth;\r\n//     const { editMode } = this.state;\r\n//     return (\r\n//       <div className=\"settings\">\r\n//         <div className=\"img-container\">\r\n//           <img\r\n//             src=\"https://image.flaticon.com/icons/svg/2154/2154651.svg\"\r\n//             alt=\"user-dp\"\r\n//           />\r\n//         </div>\r\n\r\n//         {error && <div className=\"alert error-dailog\">{error}</div>}\r\n//         {error === false && (\r\n//           <div className=\"alert success-dailog\">\r\n//             Successfully updated profile!\r\n//           </div>\r\n//         )}\r\n//         <div className=\"field\">\r\n//           <div className=\"field-label\">Email</div>\r\n//           <div className=\"field-value\">{user.email}</div>\r\n//         </div>\r\n\r\n//         <div className=\"field\">\r\n//           <div className=\"field-label\">Name</div>\r\n//           {editMode ? (\r\n//             <input\r\n//               type=\"text\"\r\n//               onChange={(e) => this.handleChange(\"name\", e.target.value)}\r\n//               value={this.state.name}\r\n//             />\r\n//           ) : (\r\n//             <div className=\"field-value\">{user.name}</div>\r\n//           )}\r\n//         </div>\r\n\r\n//         {editMode && (\r\n//           <div className=\"field\">\r\n//             <div className=\"field-label\">New password</div>\r\n\r\n//             <input\r\n//               type=\"password\"\r\n//               onChange={(e) => this.handleChange(\"password\", e.target.value)}\r\n//               value={this.state.password}\r\n//             />\r\n//           </div>\r\n//         )}\r\n\r\n//         {editMode && (\r\n//           <div className=\"field\">\r\n//             <div className=\"field-label\">Confirm password</div>\r\n\r\n//             <input\r\n//               type=\"password\"\r\n//               onChange={(e) =>\r\n//                 this.handleChange(\"confirmPassword\", e.target.value)\r\n//               }\r\n//               value={this.state.confirmPassword}\r\n//             />\r\n//           </div>\r\n//         )}\r\n\r\n//         <div className=\"btn-grp\">\r\n//           {editMode ? (\r\n//             <button className=\"button save-btn\" onClick={this.handleSave}>\r\n//               Save\r\n//             </button>\r\n//           ) : (\r\n//             <button\r\n//               className=\"button edit-btn\"\r\n//               onClick={() => this.handleChange(\"editMode\", true)}\r\n//             >\r\n//               Edit profile\r\n//             </button>\r\n//           )}\r\n\r\n//           {editMode && (\r\n//             <div\r\n//               className=\"go-back\"\r\n//               onClick={() => this.handleChange(\"editMode\", false)}\r\n//             >\r\n//               Go back\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// function mapStateToProps({ auth }) {\r\n//   return {\r\n//     auth,\r\n//   };\r\n// }\r\n// export default connect(mapStateToProps)(Settings);\r\n","import PostsList from \"./PostsList.js\";\r\nimport react from \"react\";\r\nclass Page404 extends react.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1> Page 404 Nothing found here!!!</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Page404;\r\n","import reactDom from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchPosts } from \"../actions/posts\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport PostsList from \"./PostsList.js\";\nimport PropTypes from \"prop-types\";\nimport Navbar from \"./Navbar.js\";\nimport Home from \"./Home.js\";\nimport Login from \"./Login.js\";\nimport SignUp from \"./SignUp.js\";\nimport UserProfile from \"./UserProfile.js\";\nimport Settings from \"./Settings.js\";\nimport react from \"react\";\nimport { getAuthToken } from \"../helpers/utils.js\";\nimport * as jwtDecode from \"jwt-decode\";\nimport { fetchUserFriends } from \"../actions/friends\";\n\nimport { authenticateUser } from \"../actions/auth\";\nimport Page404 from \"./Page404.js\";\n\n// const Settings = () => <div> Settings</div>;\nconst PrivateRoute = (privateRouteProps) => {\n  const { isLoggedin, path, component: Component } = privateRouteProps;\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        return isLoggedin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\nclass App extends react.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchPosts());\n    const token = getAuthToken();\n    // console.log(\"token \", token);\n    if (token) {\n      const user = jwtDecode(token);\n\n      console.log(\"userrrrrrr\", user);\n      this.props.dispatch(\n        authenticateUser({\n          email: user.email,\n          _id: user._id,\n          name: user.name,\n        })\n      );\n      this.props.dispatch(fetchUserFriends());\n    }\n  }\n  render() {\n    console.log(\"props\", this.props);\n    const { posts, auth, friends } = this.props;\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          {/* <PostsList posts={posts} /> */}\n          {/* <ul>\n            <li>\n              {\" \"}\n              <Link to=\"/\"> Home</Link>\n            </li>\n            <li>\n              {\" \"}\n              <Link to=\"/login\">Login </Link>\n            </li>\n            <li>\n              {\" \"}\n              <Link to=\"/signup\">SignUp</Link>\n            </li>\n          </ul> */}\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => {\n                return (\n                  <Home\n                    {...props}\n                    posts={posts}\n                    friends={friends}\n                    isLoggedin={auth.isLoggedin}\n                  />\n                );\n              }}\n            />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={SignUp} />\n            <PrivateRoute\n              path=\"/settings\"\n              component={Settings}\n              isLoggedin={auth.isLoggedin}\n            />\n            <PrivateRoute\n              path=\"/user/:userId\"\n              component={UserProfile}\n              isLoggedin={auth.isLoggedin}\n            />\n            <Route component={Page404} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth,\n  };\n}\nApp.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\nexport default connect(mapStateToProps)(App);\n","import {\r\n  LOGIN_START,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  AUTHENTICATE_USER,\r\n  LOG_OUT,\r\n  SIGNUP_START,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILED,\r\n  CLEAR_AUTH_STATE,\r\n  EDIT_USER_SUCCESSFUL,\r\n  EDIT_USER_FAIL,\r\n} from \"../actions/actionType\";\r\nconst initialiseState = {\r\n  user: {},\r\n  error: null,\r\n  isLoggedin: false,\r\n  inProgress: false,\r\n};\r\nexport default function auth(state = initialiseState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_START:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    case CLEAR_AUTH_STATE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    case SIGNUP_START:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n        error: null,\r\n        inProgress: false,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        inProgress: false,\r\n      };\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n        inProgress: false,\r\n        error: null,\r\n      };\r\n    case SIGNUP_FAILED:\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    case AUTHENTICATE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        isLoggedin: true,\r\n      };\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        isLoggedin: false,\r\n      };\r\n    case EDIT_USER_SUCCESSFUL:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n        error: false,\r\n      };\r\n    case EDIT_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAILURE,\r\n  FETCH_USER_PROFILE,\r\n} from \"../actions/actionType\";\r\n\r\nconst initalProfileState = {\r\n  user: {},\r\n  error: null,\r\n  success: null,\r\n  inProgress: false,\r\n};\r\nexport default function profile(state = initalProfileState, action) {\r\n  switch (action.type) {\r\n    case USER_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: true,\r\n        user: action.user,\r\n        inProgress: false,\r\n      };\r\n    case USER_PROFILE_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        inProgress: false,\r\n      };\r\n    case FETCH_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_FRIENDS_SUCCESS, ADD_FRIEND } from \"../actions/actionType\";\r\n\r\nconst defaultProfileState = [];\r\n\r\n// profile reducer\r\nexport default function friends(state = defaultProfileState, action) {\r\n  switch (action.type) {\r\n    case FETCH_FRIENDS_SUCCESS:\r\n      return [...action.friends];\r\n    case ADD_FRIEND:\r\n      return state.concat(action.friend);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport posts from \"./posts\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport friends from \"./friends\";\r\n\r\nexport default combineReducers({\r\n  posts,\r\n  auth,\r\n  profile,\r\n  friends,\r\n});\r\n","import { UPDATE_POSTS, ADD_POST } from \"../actions/actionType\";\r\nexport default function posts(state = [], action) {\r\n  switch (action.type) {\r\n    case UPDATE_POSTS:\r\n      return action.posts;\r\n    case ADD_POST:\r\n      return [action.post, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport { configureStore } from \"./store\";\nconst store = configureStore();\nconsole.log(store);\nconsole.log(\"get\", store.getState());\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport reducer from \"../reducer\";\r\nlet store;\r\nexport function configureStore() {\r\n  store = createStore(reducer, applyMiddleware(thunk, logger));\r\n  return store;\r\n}\r\n"],"sourceRoot":""}